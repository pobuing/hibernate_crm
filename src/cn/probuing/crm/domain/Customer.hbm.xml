<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!--配置表与实体对象的关系-->
<!--package属性：填写一个包名，在元素内部凡是需要书写完整类名的属性，可以直接写类名-->
<hibernate-mapping package="cn.probuing.crm.domain">
    <!--
        class元素：配置实体与表的对应关系
            name:完整的类名
    -->
    <class name="Customer" table="cst_customer">
        <!--id元素：配置主键映射的属性
                name:填写主键对应属性名
                column:填写表中的主键列明，默认值：列名会默认使用属性名
                type：填写列属性的类型，hibernate会自动检测实体的属性类型
                not-null:配置该属性是否不能为空，默认值false
                length:配置数据库中列的长度
        -->
        <id name="cust_id">
            <!--generator 主键生成策略，每条记录录入时，主键的生成规则
            identity:主键自增 由数据库来维护主键值，录入时不需要指定主键
            increment:主键自增 由hibernate来维护，每次插入前会先查询表中id最大值。最大值+1作为新主键值
                        存在线程安全问题，在并发访问的时候会产生数据问题
            sequence:Oracle中的主键生成策略。
            hilo:高低位算法，主键自增，由Hibernate来维护
            native:hilo+sequence+identity 三选一策略。根据数据库对自动生成表示符的能力来选择
            uuid:产生随机字符串作为主键主键类型必须为String类型
            assigned:自然主键生成策略。由用户自己手动自定id值，hibernate不会管理主键值，由开发人员自己录入



            -->

            <generator class="native"></generator>
        </id>
        <!--
            property:元素：除id之外的普通属性映射
            name:填写属性名
            column:填写列名
            type:填写列的类型，hibernate会自动检测实体的属性类型
            not-null:配置该属性是否不能为空
            length:配置数据库中列的长度，默认值：使用数据库类型的最大长度
        -->
        <property name="cust_name" column="cust_name"></property>
        <property name="cust_source" column="cust_source"></property>
        <property name="cust_industry" column="cust_industry"></property>
        <property name="cust_level" column="cust_level"></property>
        <property name="cust_linkman" column="cust_linkman"></property>
        <property name="cust_phone" column="cust_phone"></property>
        <property name="cust_mobile" column="cust_mobile"></property>
        <!--级联操作：cascade
                save-update:级联保存更新
                delete:级联删除
                all: save-update delete 级联保存更新和级联删除
            级联操作:简化操作

        -->
        <!--
            inverse属性：配置关系是否维护
            配置当前的Customer是否维护与LinkMan的关系
            inverse true 的意思就是将关系维护的工作完全交给对方 作为配置方不进行维护关系
                    false(默认值) 意思是将关系维护的工作由配置方来维护
        -->
        <set name="linkMens" inverse="true">
            <!--配置集合 一对多的关系-->
            <!--指定外键列名-->
            <key column="lkm_cust_id"></key>
            <!--指定一对多还是多对多
                class指定是与哪个类型一对多
            -->
            <one-to-many class="LinkMan"/>

        </set>
    </class>

</hibernate-mapping>